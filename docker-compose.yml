version: '3.8'

services:

 # React frontend

 react:
  container_name: react
  build: ./frontend
  ports: 
   - "3000:3000"
  restart: unless-stopped
  volumes:
   - clientdata:/frontend
  depends_on:
   - flask
  networks:
   - frontend
   - backend

 # Flask backend

 flask:
  container_name: flask
  build: ./backend
  ports: 
    - "5001:5001"
  restart: unless-stopped  # stops when you stop the container
  volumes:
   - appdata:/backend  # appdata volume mounted in /backend  (application logs)
  depends_on:
   - database  # depends on the database to function properly
  networks:  # has access to the frontend and backend
   - frontend  # needs to be publically accessible
   - backend  # needs to be hidden behind

 # webserver

 webserver:
  container_name: webserver
  build: ./nginx
  restart: unless-stopped
  environment:
   APP_ENV: "Production"
   APP_NAME: "Housify"
   APP_DEBUG: "false"
   SERVICE_NAME: "webserver"
  ports:
   - 80:80
   - 443:443
  depends_on:
   - flask
  networks:
   - frontend
   - backend

# service done

networks:  # allows the containers to talk to each other
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:  # declares the volumes that the application will use to persist data
  appdata:
    driver: local
  clientdata:
    driver: local
 
 #  docker-compose -f docker-compose.dev.yml up --build
 # docker-compose up -d
