version: '3.8'

services:

 # React frontend

 react:
  container_name: react
  build: ./frontend
  restart: unless-stopped
  volumes:
    - clientdata:/frontend
  networks:
   housify-network:
    aliases:
      - frontend
  ports: 
   - "3000:3000"

 # Flask backend

 flask:
  container_name: flask
  build: ./backend
  command: gunicorn --bind 0.0.0.0:5000 --workers 4 "wsgi:app"
  restart: unless-stopped  # stops when you stop the container
  volumes:
   - appdata:/backend  # appdata volume mounted in /backend  (application logs)
  networks:  # has access to the frontend and backend
   housify-network:
    aliases:
      - backend
  expose:
    - 5000
  ports: 
    - "5000:5000"

 # webserver

 nginx:
  container_name: nginx
  build: ./nginx
  restart: unless-stopped
  ports:
   - 80:80
   - 443:443
  depends_on:
   - flask
   - react
  networks:
   - housify-network

# service done

networks:  # allows the containers to talk to each other
  housify-network:

volumes:  # declares the volumes that the application will use to persist data
  appdata:
    driver: local
  clientdata:
    driver: local
 
 #  docker-compose -f docker-compose.dev.yml up --build
 # docker-compose up -d
